++ Раздел Функциональность Оператора
[template: ШаблонСтраницыРазделаКонцепции]
Состояние: [В РАЗРАБОТКЕ]
* todo: Тут есть разделы, которые больше относятся к РазделПрименениеОператора. Надо их туда перенести и потом прорастить в РазделАрхитектураОператора и потом уже сюда. Прорастить через эти слои как отдельную тему в концепции.
    * Тексты о том как хорошо бы, чтобы Оператор делал для меня Это-и-то - относятся к РазделПрименениеОператора.
    * Тексты о том, что нужно для того чтобы Оператор делал для меня Это-и-то - относятся к РазделФункциональностьОператора, то есть, на эту страницу.
* todo: Надо обозначить единицы-применения индивидуально и здесь описывать, что для каждой из них нужно. 
    * Должна получиться древовидная схема: Идеи применения-Единицы применения-Идеи функциональной реализации-Единицы функциональности. 


+++Ссылки раздела
* ГлоссарийОператор


+++Содержание раздела


+++Материалы
+Единицы функциональности

++Функциональность ГУЯ
+++Звуковые оповещения
* можно предложить оформлять звуковыми сигналами события успешного исполнения [Команда]ы, и неуспешного исполнения, и янезнаю-результат тоже. Отключать или включать эти сигналы через [Процедура]ы.

+++Сворачивание окна в трей
* Сворачивать в трей вместо закрытия окна кликом по крестику.
    * Показывать в трее основную иконку приложения.
    * Разворачивать по левому клику по значку в трее.
        * получается только по двойному клику - кривой NotifyIcon контрол. 
    * Показывать меню по правому клику по значку в трее.
    * В меню Файл главного окна приложения иметь пункт Закрыть, который закрывает приложение.
    * Если окно свернуто в трей, показывать всплывающими уведомлениями только важные события.
      Но не критические, так как пользователь обычно игнорирует уведомления.
* 09.09.2017 12:08 кусочек функциональности: сворачивание главного окна в трей вместо закрытия формы:  [file:///C:/Work/myVirtualDisk/МоиПроекты/РечевойИнтерфейс/Материалы/CompactWindowTest.zip]. 
    * Тогда в главном окне нужно меню с пунктом Закрыть, иначе окно невозможно будет закрыть.
    * Можно показывать извещения о важных событиях, когда главное окно скрыто.
    * Нужно состояние скрытого окна отмечать в некоторой переменной, чтобы (только важные!) события выводить в извещения только тогда, когда главное окно скрыто.
    * question: Концепция: А нужно ли вообще скрывать-сворачивать окно РИ? Может быть, лучше будет его постоянно на экране держать где-то скромно? Лучше на отдельном мониторе, конечно. Это надо потом по мере возможности проверить, но пока лучше иметь возможность сворачивать в трей. Можно ведь и не пользоваться ею.

+++Хоткей показа окна оператора
* Значок приложения в трее - слишком мелкий. И он обычно скрывается таскбаром. Лучше вызывать окно Оператора специальной глобальной клавишей вроде F12. Или специальной кнопкой на ноутбуке - она запускает привязанные к ней приложения.
    * Хоткей должен показывать окно и с заднего плана,и с таскбара, и из трея.
        * В коде формы нужна функция Показать окно().   
    * Эта идея расширена в канал сообщений хоткеев. Хоткей показа окна определяется пользователем через этот канал. 
 
+++Запуск только одной копии приложения
* Если приложение запускается во второй раз - то просто разворачивать окно Оператора и делать его активным. Это будет работать при запуске через ярлык на рабочем столе или через специальные клавиши или через автозагрузку. Так и всегда только один экземпляр приложения будет запущен, и его вызов будет понятным для пользователя.
    * При запуске приложения Оператора нужно проверять существование некоторого именованного объекта ядра - мутекса. Если его нет - Оператор не запущен. И потом создавать его.
    * Имя мутекса можно применить в скрипте инсталлятора, чтобы переустанавливать/обновлять приложение, только если оно не запущено. Там есть для этого поддержка.
* question: если приложение автостартует с системой, как пользователь сможет его повторно запустить? Нигде ведь не будет ярлыка для этого. Да и смысла в этом нет. А чтобы выгрузить приложение, есть иконка в трее. А повторно запустить- есть ярлык в Автозагрузка. Тогда сообщения о работающей копии вполне достаточно, и не нужно переключаться на старую копию приложения.


+++Иконка приложения Оператор
* Иконка приложения должна быть узнаваемой, отражать суть и быть разборчивой и понятной с беглого взгляда.

+++Показ текущего времени и даты
* Пользователь должен видеть день недели и текущее время. 
    * Окно должно иметь строку состояния, в ней показывать состояние Оператора (Выполняемое действие), текущее время с точностью до минут, дату, текстом месяц и день недели.
    * Обновлять время раз в минуту, в начале минуты. По таймеру, нужен таймер окна с периодом в 1 секунду или менее.
+++Управление питанием
 - Спать - а как потом разбудить? Удаленно разбудить не получится. Только локально.

++Функциональность Движка
+++Первичный набор функциональности
См [rel://files/оператор диаграмма1.JPG]
Это вот фиксированный набор функциональности, который сразу надо встроить в приложение. 
А остальное - модулями подобно Каналу Загрузка. То есть, через СписокКоманд.
+++Сбор запросов пользователя
* Новый прототип тоже должен собирать запросы, особенно необработанные. В один файл все запросы, в другой - только необработанные.

+++Лог процесса обработки запросов
* Новый прототип должен выводить отключаемый лог процесса обработки запроса - выбор [Процедура] и исполнение [Процедура] и другие действия. Этот лог нужен для отладки процесса.
* Лог должен включаться и отключаться через [Команда]у консоли как и все обычным путем.

+++Лог сеанса Оператор
* общее ведение лога действий пользователя с Оператор.

+++Функция - Определение доступности интернета
Надо определять, что комп подключен к интернету. Чтобы отослать на мой сервер тексты запросов и логи и статистику использования функций.
Собирать их в файл отчета или в лог, а потом лог отсылать на мой сервер. Когда он будет доступен.
 * Функция такая найдена, проверена, работает. Хотя она тянет стороннюю Длл, и это ради одной функции неудобно. Код лежит в моей коллекции способов виндовс.
 * А мне пока некуда ее применять - я никуда отчеты не собираюсь отсылать. Распространение Оператор не предполагается.

++++Задачи обслуживания системы
* Надо бы в системе хранить также [Задача]и, которые пользователь должен сделать для обслуживания системы. Для начала, для развертывания системы - пользователь должен занести в систему все [Место]а и приложения.
    * То есть, в системе должны храниться вообще [Задача]и.
    * Если эти [Задача]и можно отложить, пользователь именно отложит их надолго. Как в этом случае система будет работать? 

++Функциональность наборов команд Оператор

+++Команды управления приложениями Windows
* Закрыть %приложение или Завершить %приложение
* Показать запущенные приложения
* Показать запущенные процессы или Показать процессы
* Показать установленные приложения

+++Команда поиска внутри Оператора
* Нужно сделать [Процедура]ы для поиска [Процедура] и [Место], а то их становится слишком много, чтобы помнить. Хотя этим не следует увлекаться. 

+++Выбор мест по их типу
Для [Команда]ы "Покажи плейлисты" нужны средства выборки [Место] по типу.
То есть, нужно из общего списка [Место] выбрать [Место]а с типом Плейлист. Потом вывести их на экран.

Как это реализовать? Просмотрев классы [Место]. Но у классов должны быть известные и стандартные имена.
И для этого просмотра нужны операции АПИ.

Имена классов надо не вручную вписывать, а выбирать из классификации. Так меньше будет ошибок. Но пока я не могу это сделать - у меня в Оператор нет общего дерева классов. Можно выводить сообщение " Такого дерева нет в списке классов. Вы хотите создать новый класс?".
Но это требует еще и описания классов и дерева классов или Тапп-подобной структуры.
и соответственно функций АПИ для классов. И браузера классов. И еще много всего надо.