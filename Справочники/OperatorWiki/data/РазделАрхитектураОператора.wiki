++ Раздел Архитектура Оператора
[template: ШаблонСтраницыРазделаКонцепции]
Состояние: [В РАЗРАБОТКЕ]
Тут описывается абстрактная модель, которая затем должна быть конкретизирована в РазделФункциональностьОператора.
* todo: Надо проследить, чтобы тут была абстракция, а там - реализация, и ничего не упустить!
* todo: Надо уже определиться с терминологией для [Задача]-[Процедура]-[Команда] и остальных терминов. Для Глосcария.
* todo: В целом, концепт Оператора уже сложился. Теперь надо его превратить в четкую систему.

+++Ссылки раздела
* ГлоссарийОператор
* ИдеяШарпИнтерпретаторВОператоре
* ИдеяИнтерпретаторЕстественногоЯзыка
* wikirel://../SpeakWiki/SpeakWiki.wiki?page=ПерехватСообщенийКонсольногоПриложения
* wikirel://../SpeakWiki/SpeakWiki.wiki?page=ПроцессОбработкиВРечевойКонсоли

+++Содержание раздела

+++Компоненты проекта
* GUI приложение оболочка пользователя - интерфейс чата и движок Оператора. Нельзя выделить движок оператора в отдельную Длл, так как еще нужны [Событие]  для КаналСобытий, а они поставляются только из окна приложения. 
* Dll ПакетЗнаний - устроены подобно проекту Тапп1.
* Dll ФреймворкОператор для кода [Процедура] - содержат собственно (служебный) код для процедур.
* Dll вспомогательных функций - это моя библиотека функций. Хотя можно ее функции встроить в Движок, но на этапе прототипа лучше несущественные детали отдельно держать. Да и развивать ее надо.
* Справочная документация - ее потребуется много, поскольку сейчас проект большой, и эти знания постоянно нужны при работе с Оператором.
* БдОператора - файл БД оператора.

++++Порядок создания компонентов
GUI приложение нужно в первую очередь - для отладки остальных частей Оператора.
Потом нужно сделать Движок.
Потом сделать Сборки каналов Событий - хотя бы одну для тестов и отработки функциональности Движка.

+++Подсистемы Движка
* Собственно Движок
* Адаптер БД sqlite
* МенеджерЛога
* Менеджеры каналов Событий (потом?)
* Интерфейс модуля канала событий
* todo: Добавить сюда решения из материалов вики

+++Файловая система Оператора
* Корневой каталог установки
    * Каталог исполняемых файлов
    * Каталог справочной информации
* Каталог, доступный пользователю на запись
    * Каталог модулей и пакетов знаний
    * Каталог файлов БД и настроек
    * Каталог файлов и программ для [Процедура]
    * Каталог файлов лога 

Лучше всего установить не в Program Files и Local Settings, а в собственную папку с правами пользователя на запись.
Но есть проблемы с Автозагрузкой - эти программы запускаются для пользователя или для системы?
    * Вероятно, для пользователя. Тогда можно использовать Program Files и Local Settings. Но тогда Пользователю сложно будет добавлять в Каталог файлов и программ для [Процедура] новые файлы. Сейчас он это должен делать вручную.
        * Тогда у пользователя есть возможность что-то повредить и испортить всю работу Оператора.
        * Лучше бы организовать собственное ХранилищеФайлов для этих файлов в Каталог файлов и программ для [Процедура]. todo: Но пока это надо отложить до наведения порядка в проекте. 

++Единицы архитектуры Оператор

+++Оператор через Смартфон
* Оператор можно держать на постоянно включенном компьютере, и со смартфона через вайфай или мобильный Интернет к нему обращаться - веб-консоль такую сделать для запросов пользователя. Будет более-менее удобно для Инвентарь итп операций.

+++Коллекция переменных сеанса Оператор
Можно предложить держать в Движок коллекцию переменных сеанса. Любой АгентИсполнитель или другая часть Оператора могли бы создать переменную, удалить ее, изменить ее значение. Эта коллекция и входящие в нее переменные будут доступны всем частям Оператора. Эта коллекция действует лишь на время сеанса Оператора. Хотя можно и в файл сохранять при завершении сеанса.
    * Имена переменных должны быть уникальны. Иначе значения будут перезаписываться.
    * Собственно, переменные можно и в БД Оператора хранить где-нибудь, а не в файле. В файле их проще просматривать и править.
* Для чего это надо:
    * Одна команда могла бы установить некий флаг для других команд. Другие команды могли бы использовать его.
        * Это способ сохранить контекст некоторого процесса между отдельными командами.
        * todo: Сейчас в концепции нет представления о том, как Оператор будет выполнять сложные процессы, состоящие из последовательности команд пользователя, не объединенные скриптом. Тут нужно хранить общий контекст такого процесса. Я над этим вопросом не работал, так как сосредоточился на исполнении отдельных команд. Но надо собрать материалы и на эту тему - из вики и написать новых. Хотя, пока нет опыта работы с отдельными командами - трудно объять неизвестное.
    * Тогда могут пригодиться и сохраняемые между сеансами переменные. Их надо выгружать в файл при закрытии сеанса и загружать перед началом сеанса.
    * Все же пока нет необходимости в такой коллекции. Хотя я уже сделал для нее класс. Надо найти применние этой идее.

++++Реализация
Класс VariablesCollection: многопоточный доступ к коллекции переменных - создан уже.
* Load(..) - загрузить из файла
* Save(..) - сохранить в файл
* Get(..) - получить значение переменной по названию
* Set(..) - изменить или создать переменную со значением
* Exists(..) - проверить что переменная существует
* Clear() - очистить коллекцию
* Remove(..) - удалить переменную по названию
* ListAllItems() - получить список элементов для вывода на экран 

* Получаются два объекта: Session variables (не сохраняется) и Static variables (сохраняется).
* Нужно хранить путь к файлу в настройках Движка: поле, проперти, константу-дефолтовое значение, функцию проверки, функцию дефолтовых значений. 
    * а может в БД поместить данные, а не в файл?
    * а может, имя файла прописать в коде жестко, а не в настройках заводить все? А каталог брать из настроек Оператора. А то многовато всяких файликов получается - на все их замучаешься переписывать Настройки Оператора. 
* Поместить в объект Движка, доступ через проперти.
* Создавать объект в конструкторе Движка, загружать данные при открытии сеанса Оператора.
* Проблема: при эксплуатации файл будет заполнен неиспользуемыми переменными, а как их выявлять и удалять?
    * Можно иногда очищать файл и Оператор заново все переменные будет создавать по мере востребованности. Но это пока очень надуманная проблема. Опыт эксплуатации должен показать, что там происходит и как лучше сделать. 
    

+++Модульная функциональность - Пакеты знаний
* реализовывать крупную функциональность модульно в раздельных dll ПакетЗнаний, которые подключаются вместе с наборами команд.
Чтобы получались такие наборы-плагины для разных моих направлений деятельности.

++++Доступ к коду
Для исполнения [Процедура] из ПакетЗнаний.
Нужен будет доступ к функциям Длл, загрузку Длл в отдельный временный домен. 
Надо указывать путь к функциям, подобно Тапп1. 
А значит, нужны и атрибуты сборок и функций и классов тоже как в Тапп1.
Нужна будет документация по этим функциям Длл - некий свой ФреймворкОператор получится. 

++++Состав пакета знаний 
* в состав пакета должны входить также исполняемые файлы и ресурсы, необходимые для работы команд пакета. Например, если пакет реализует упаковку в архивы, то вместе с ним должна поставляться утилита архиватора. Чтобы пользователь, сразу установив пакет, мог с ним работать.
    * Это требует права на исполнение программ из каталога с пакетом, на запись находящихся в нем конфигурационных файлов, итд. 
    * ПакетЗнаний получается архивом, содержащим папку пакета, длл пакета в нем, папку ресурсов с подпапками если нужно.
    * Возможно, после добавления ПакетЗнаний в Оператор, потребуется функция инициализации ПакетЗнаний для установки программ-ресурсов пакета. 
* Документация на ПакетЗнаний должна поставляться вместе с ним и использоваться интегрированно в общую документации Оператор. 
    


++Материалы




